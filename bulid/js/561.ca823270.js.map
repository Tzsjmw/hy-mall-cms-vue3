{"version":3,"file":"js/561.ca823270.js","mappings":"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","sources":["webpack://vue3-ts-css/./src/components/page-modal/index.ts","webpack://vue3-ts-css/./src/hooks/use-page-modal.ts","webpack://vue3-ts-css/../../../../../packages/components/dialog/src/dialog-content.ts","webpack://vue3-ts-css/../../../../packages/tokens/dialog.ts","webpack://vue3-ts-css/../../../../../packages/components/dialog/src/dialog-content.vue","webpack://vue3-ts-css/../../../../../packages/components/dialog/src/dialog.ts","webpack://vue3-ts-css/../../../../../packages/components/dialog/src/use-dialog.ts","webpack://vue3-ts-css/../../../../../packages/components/dialog/src/dialog.vue","webpack://vue3-ts-css/../../../../../packages/components/dialog/index.ts","webpack://vue3-ts-css/./src/components/page-modal/src/page-modal.vue?0fe2","webpack://vue3-ts-css/./src/components/page-modal/src/page-modal.vue","webpack://vue3-ts-css/./src/components/page-modal/src/page-modal.vue?c2b2","webpack://vue3-ts-css/../../../../../packages/utils/vue/refs.ts"],"sourcesContent":["import PageModal from './src/page-modal.vue'\n\nexport default PageModal\n","import { ref } from 'vue'\nimport PageModal from '@/components/page-modal'\n\ntype CallbackFn = (item?: any) => void\n\nexport function usePageModal(newCb?: CallbackFn, editCb?: CallbackFn) {\n  const pageModalRef = ref<InstanceType<typeof PageModal>>()\n  const defaultInfo = ref({})\n\n  // 新建按钮的逻辑\n  const handleNewData = () => {\n    defaultInfo.value = {}\n    if (pageModalRef.value) {\n      pageModalRef.value.dialogVisible = true\n    }\n    newCb && newCb()\n  }\n  // 编辑按钮的逻辑\n  const handleEditData = (item: any) => {\n    defaultInfo.value = { ...item }\n    if (pageModalRef.value) {\n      pageModalRef.value.dialogVisible = true\n    }\n    editCb && editCb(item)\n  }\n  return [pageModalRef, defaultInfo, handleNewData, handleEditData]\n}\n","import { buildProps, iconPropType } from '@element-plus/utils'\n\nexport const dialogContentProps = buildProps({\n  center: {\n    type: Boolean,\n    default: false,\n  },\n  closeIcon: {\n    type: iconPropType,\n    default: '',\n  },\n  customClass: {\n    type: String,\n    default: '',\n  },\n  draggable: {\n    type: Boolean,\n    default: false,\n  },\n  fullscreen: {\n    type: Boolean,\n    default: false,\n  },\n  showClose: {\n    type: Boolean,\n    default: true,\n  },\n  title: {\n    type: String,\n    default: '',\n  },\n} as const)\n\nexport const dialogContentEmits = {\n  close: () => true,\n}\n","import type { CSSProperties, ComputedRef, InjectionKey, Ref } from 'vue'\nimport type { useNamespace } from '@element-plus/hooks'\n\nexport type DialogContext = {\n  dialogRef: Ref<HTMLElement | undefined>\n  headerRef: Ref<HTMLElement | undefined>\n  bodyId: Ref<string>\n  ns: ReturnType<typeof useNamespace>\n  rendered: Ref<boolean>\n  style: ComputedRef<CSSProperties>\n}\n\nexport const dialogInjectionKey: InjectionKey<DialogContext> =\n  Symbol('dialogInjectionKey')\n","<template>\n  <div\n    :ref=\"composedDialogRef\"\n    :class=\"[\n      ns.b(),\n      ns.is('fullscreen', fullscreen),\n      ns.is('draggable', draggable),\n      { [ns.m('center')]: center },\n      customClass,\n    ]\"\n    :style=\"style\"\n    tabindex=\"-1\"\n    @click.stop\n  >\n    <header ref=\"headerRef\" :class=\"ns.e('header')\">\n      <slot name=\"header\">\n        <span role=\"heading\" :class=\"ns.e('title')\">\n          {{ title }}\n        </span>\n      </slot>\n      <button\n        v-if=\"showClose\"\n        :aria-label=\"t('el.dialog.close')\"\n        :class=\"ns.e('headerbtn')\"\n        type=\"button\"\n        @click=\"$emit('close')\"\n      >\n        <el-icon :class=\"ns.e('close')\">\n          <component :is=\"closeIcon || Close\" />\n        </el-icon>\n      </button>\n    </header>\n    <div :id=\"bodyId\" :class=\"ns.e('body')\">\n      <slot />\n    </div>\n    <footer v-if=\"$slots.footer\" :class=\"ns.e('footer')\">\n      <slot name=\"footer\" />\n    </footer>\n  </div>\n</template>\n\n<script lang=\"ts\" setup>\nimport { computed, inject } from 'vue'\nimport { ElIcon } from '@element-plus/components/icon'\nimport { FOCUS_TRAP_INJECTION_KEY } from '@element-plus/components/focus-trap'\nimport { useDraggable, useLocale } from '@element-plus/hooks'\nimport { CloseComponents, composeRefs } from '@element-plus/utils'\nimport { dialogInjectionKey } from '@element-plus/tokens'\nimport { dialogContentEmits, dialogContentProps } from './dialog-content'\n\nconst { t } = useLocale()\nconst { Close } = CloseComponents\n\ndefineOptions({ name: 'ElDialogContent' })\nconst props = defineProps(dialogContentProps)\ndefineEmits(dialogContentEmits)\n\nconst { dialogRef, headerRef, bodyId, ns, style } = inject(dialogInjectionKey)!\nconst { focusTrapRef } = inject(FOCUS_TRAP_INJECTION_KEY)!\n\nconst composedDialogRef = composeRefs(focusTrapRef, dialogRef)\n\nconst draggable = computed(() => props.draggable)\nuseDraggable(dialogRef, headerRef, draggable)\n</script>\n","import { buildProps, definePropType, isBoolean } from '@element-plus/utils'\nimport { UPDATE_MODEL_EVENT } from '@element-plus/constants'\nimport { dialogContentProps } from './dialog-content'\n\nimport type { ExtractPropTypes } from 'vue'\n\ntype DoneFn = (cancel?: boolean) => void\nexport type DialogBeforeCloseFn = (done: DoneFn) => void\n\nexport const dialogProps = buildProps({\n  ...dialogContentProps,\n  appendToBody: {\n    type: Boolean,\n    default: false,\n  },\n  beforeClose: {\n    type: definePropType<DialogBeforeCloseFn>(Function),\n  },\n  destroyOnClose: {\n    type: Boolean,\n    default: false,\n  },\n  closeOnClickModal: {\n    type: Boolean,\n    default: true,\n  },\n  closeOnPressEscape: {\n    type: Boolean,\n    default: true,\n  },\n  lockScroll: {\n    type: Boolean,\n    default: true,\n  },\n  modal: {\n    type: Boolean,\n    default: true,\n  },\n  openDelay: {\n    type: Number,\n    default: 0,\n  },\n  closeDelay: {\n    type: Number,\n    default: 0,\n  },\n  top: {\n    type: String,\n  },\n  modelValue: {\n    type: Boolean,\n    required: true,\n  },\n  modalClass: String,\n  width: {\n    type: [String, Number],\n  },\n  zIndex: {\n    type: Number,\n  },\n  trapFocus: {\n    type: Boolean,\n    default: false,\n  },\n} as const)\n\nexport type DialogProps = ExtractPropTypes<typeof dialogProps>\n\nexport const dialogEmits = {\n  open: () => true,\n  opened: () => true,\n  close: () => true,\n  closed: () => true,\n  [UPDATE_MODEL_EVENT]: (value: boolean) => isBoolean(value),\n  openAutoFocus: () => true,\n  closeAutoFocus: () => true,\n}\nexport type DialogEmits = typeof dialogEmits\n","// @ts-nocheck\nimport {\n  computed,\n  getCurrentInstance,\n  nextTick,\n  onMounted,\n  ref,\n  watch,\n} from 'vue'\nimport { isClient, useTimeoutFn } from '@vueuse/core'\n\nimport {\n  defaultNamespace,\n  useGlobalConfig,\n  useId,\n  useLockscreen,\n  useZIndex,\n} from '@element-plus/hooks'\nimport { UPDATE_MODEL_EVENT } from '@element-plus/constants'\nimport { addUnit } from '@element-plus/utils'\n\nimport type { CSSProperties, Ref, SetupContext } from 'vue'\nimport type { DialogEmits, DialogProps } from './dialog'\n\nexport const useDialog = (\n  props: DialogProps,\n  targetRef: Ref<HTMLElement | undefined>\n) => {\n  const instance = getCurrentInstance()!\n  const emit = instance.emit as SetupContext<DialogEmits>['emit']\n  const { nextZIndex } = useZIndex()\n\n  let lastPosition = ''\n  const titleId = useId()\n  const bodyId = useId()\n  const visible = ref(false)\n  const closed = ref(false)\n  const rendered = ref(false) // when desctroyOnClose is true, we initialize it as false vise versa\n  const zIndex = ref(props.zIndex || nextZIndex())\n\n  let openTimer: (() => void) | undefined = undefined\n  let closeTimer: (() => void) | undefined = undefined\n\n  const namespace = useGlobalConfig('namespace', defaultNamespace)\n\n  const style = computed<CSSProperties>(() => {\n    const style: CSSProperties = {}\n    const varPrefix = `--${namespace.value}-dialog`\n    if (!props.fullscreen) {\n      if (props.top) {\n        style[`${varPrefix}-margin-top`] = props.top\n      }\n      if (props.width) {\n        style[`${varPrefix}-width`] = addUnit(props.width)\n      }\n    }\n    return style\n  })\n\n  function afterEnter() {\n    emit('opened')\n  }\n\n  function afterLeave() {\n    emit('closed')\n    emit(UPDATE_MODEL_EVENT, false)\n    if (props.destroyOnClose) {\n      rendered.value = false\n    }\n  }\n\n  function beforeLeave() {\n    emit('close')\n  }\n\n  function open() {\n    closeTimer?.()\n    openTimer?.()\n\n    if (props.openDelay && props.openDelay > 0) {\n      ;({ stop: openTimer } = useTimeoutFn(() => doOpen(), props.openDelay))\n    } else {\n      doOpen()\n    }\n  }\n\n  function close() {\n    openTimer?.()\n    closeTimer?.()\n\n    if (props.closeDelay && props.closeDelay > 0) {\n      ;({ stop: closeTimer } = useTimeoutFn(() => doClose(), props.closeDelay))\n    } else {\n      doClose()\n    }\n  }\n\n  function handleClose() {\n    function hide(shouldCancel?: boolean) {\n      if (shouldCancel) return\n      closed.value = true\n      visible.value = false\n    }\n\n    if (props.beforeClose) {\n      props.beforeClose(hide)\n    } else {\n      close()\n    }\n  }\n\n  function onModalClick() {\n    if (props.closeOnClickModal) {\n      handleClose()\n    }\n  }\n\n  function doOpen() {\n    if (!isClient) return\n    visible.value = true\n  }\n\n  function doClose() {\n    visible.value = false\n  }\n\n  function onOpenAutoFocus() {\n    emit('openAutoFocus')\n  }\n\n  function onCloseAutoFocus() {\n    emit('closeAutoFocus')\n  }\n\n  if (props.lockScroll) {\n    useLockscreen(visible)\n  }\n\n  function onCloseRequested() {\n    if (props.closeOnPressEscape) {\n      handleClose()\n    }\n  }\n\n  watch(\n    () => props.modelValue,\n    (val) => {\n      if (val) {\n        closed.value = false\n        open()\n        rendered.value = true // enables lazy rendering\n        emit('open')\n        zIndex.value = props.zIndex ? zIndex.value++ : nextZIndex()\n        // this.$el.addEventListener('scroll', this.updatePopper)\n        nextTick(() => {\n          if (targetRef.value) {\n            targetRef.value.scrollTop = 0\n          }\n        })\n      } else {\n        // this.$el.removeEventListener('scroll', this.updatePopper\n        if (visible.value) {\n          close()\n        }\n      }\n    }\n  )\n\n  watch(\n    () => props.fullscreen,\n    (val) => {\n      if (!targetRef.value) return\n      if (val) {\n        lastPosition = targetRef.value.style.transform\n        targetRef.value.style.transform = ''\n      } else {\n        targetRef.value.style.transform = lastPosition\n      }\n    }\n  )\n\n  onMounted(() => {\n    if (props.modelValue) {\n      visible.value = true\n      rendered.value = true // enables lazy rendering\n      open()\n    }\n  })\n\n  return {\n    afterEnter,\n    afterLeave,\n    beforeLeave,\n    handleClose,\n    onModalClick,\n    close,\n    doClose,\n    onOpenAutoFocus,\n    onCloseAutoFocus,\n    onCloseRequested,\n    titleId,\n    bodyId,\n    closed,\n    style,\n    rendered,\n    visible,\n    zIndex,\n  }\n}\n","<template>\n  <teleport to=\"body\" :disabled=\"!appendToBody\">\n    <transition\n      name=\"dialog-fade\"\n      @after-enter=\"afterEnter\"\n      @after-leave=\"afterLeave\"\n      @before-leave=\"beforeLeave\"\n    >\n      <el-overlay\n        v-show=\"visible\"\n        custom-mask-event\n        :mask=\"modal\"\n        :overlay-class=\"modalClass\"\n        :z-index=\"zIndex\"\n      >\n        <div\n          role=\"dialog\"\n          aria-modal=\"true\"\n          :aria-label=\"title || undefined\"\n          :aria-labelledby=\"!title ? titleId : undefined\"\n          :aria-describedby=\"bodyId\"\n          :class=\"`${ns.namespace.value}-overlay-dialog`\"\n          @click=\"overlayEvent.onClick\"\n          @mousedown=\"overlayEvent.onMousedown\"\n          @mouseup=\"overlayEvent.onMouseup\"\n        >\n          <el-focus-trap\n            loop\n            :trapped=\"visible\"\n            focus-start-el=\"container\"\n            @focus-after-trapped=\"onOpenAutoFocus\"\n            @focus-after-released=\"onCloseAutoFocus\"\n            @release-requested=\"onCloseRequested\"\n          >\n            <el-dialog-content\n              v-if=\"rendered\"\n              ref=\"dialogContentRef\"\n              :custom-class=\"customClass\"\n              :center=\"center\"\n              :close-icon=\"closeIcon\"\n              :draggable=\"draggable\"\n              :fullscreen=\"fullscreen\"\n              :show-close=\"showClose\"\n              :style=\"style\"\n              :title=\"title\"\n              @close=\"handleClose\"\n            >\n              <template #header>\n                <slot\n                  v-if=\"!$slots.title\"\n                  name=\"header\"\n                  :close=\"handleClose\"\n                  :title-id=\"titleId\"\n                  :title-class=\"ns.e('title')\"\n                />\n                <slot v-else name=\"title\" />\n              </template>\n              <slot />\n              <template v-if=\"$slots.footer\" #footer>\n                <slot name=\"footer\" />\n              </template>\n            </el-dialog-content>\n          </el-focus-trap>\n        </div>\n      </el-overlay>\n    </transition>\n  </teleport>\n</template>\n\n<script lang=\"ts\" setup>\nimport { computed, provide, ref, useSlots } from 'vue'\nimport { ElOverlay } from '@element-plus/components/overlay'\nimport { useDeprecated, useNamespace, useSameTarget } from '@element-plus/hooks'\nimport { dialogInjectionKey } from '@element-plus/tokens'\nimport ElFocusTrap from '@element-plus/components/focus-trap'\nimport ElDialogContent from './dialog-content.vue'\nimport { dialogEmits, dialogProps } from './dialog'\nimport { useDialog } from './use-dialog'\n\ndefineOptions({\n  name: 'ElDialog',\n})\n\nconst props = defineProps(dialogProps)\ndefineEmits(dialogEmits)\nconst slots = useSlots()\n\nuseDeprecated(\n  {\n    scope: 'el-dialog',\n    from: 'the title slot',\n    replacement: 'the header slot',\n    version: '3.0.0',\n    ref: 'https://element-plus.org/en-US/component/dialog.html#slots',\n  },\n  computed(() => !!slots.title)\n)\n\nconst ns = useNamespace('dialog')\nconst dialogRef = ref<HTMLElement>()\nconst headerRef = ref<HTMLElement>()\nconst dialogContentRef = ref()\n\nconst {\n  visible,\n  titleId,\n  bodyId,\n  style,\n  rendered,\n  zIndex,\n  afterEnter,\n  afterLeave,\n  beforeLeave,\n  handleClose,\n  onModalClick,\n  onOpenAutoFocus,\n  onCloseAutoFocus,\n  onCloseRequested,\n} = useDialog(props, dialogRef)\n\nprovide(dialogInjectionKey, {\n  dialogRef,\n  headerRef,\n  bodyId,\n  ns,\n  rendered,\n  style,\n})\n\nconst overlayEvent = useSameTarget(onModalClick)\n\nconst draggable = computed(() => props.draggable && !props.fullscreen)\n\ndefineExpose({\n  /** @description whether the dialog is visible */\n  visible,\n  dialogContentRef,\n})\n</script>\n","import { withInstall } from '@element-plus/utils'\nimport Dialog from './src/dialog.vue'\n\nexport const ElDialog = withInstall(Dialog)\nexport default ElDialog\n\nexport * from './src/use-dialog'\nexport * from './src/dialog'\n","import { resolveComponent as _resolveComponent, mergeProps as _mergeProps, createVNode as _createVNode, renderSlot as _renderSlot, createTextVNode as _createTextVNode, withCtx as _withCtx, createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"page-modal\"\n};\nconst _hoisted_2 = {\n  class: \"dialog-footer\"\n};\n\nconst _hoisted_3 = /*#__PURE__*/_createTextVNode(\"取消\");\n\nconst _hoisted_4 = /*#__PURE__*/_createTextVNode(\"确定\");\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_hy_form = _resolveComponent(\"hy-form\");\n\n  const _component_el_button = _resolveComponent(\"el-button\");\n\n  const _component_el_dialog = _resolveComponent(\"el-dialog\");\n\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createVNode(_component_el_dialog, {\n    modelValue: _ctx.dialogVisible,\n    \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => _ctx.dialogVisible = $event),\n    title: \"新建用户\",\n    width: \"30%\",\n    center: \"\",\n    \"destroy-on-close\": \"\"\n  }, {\n    footer: _withCtx(() => [_createElementVNode(\"span\", _hoisted_2, [_createVNode(_component_el_button, {\n      onClick: _cache[1] || (_cache[1] = $event => _ctx.dialogVisible = false)\n    }, {\n      default: _withCtx(() => [_hoisted_3]),\n      _: 1\n    }), _createVNode(_component_el_button, {\n      type: \"primary\",\n      onClick: _ctx.handleConfirmClick\n    }, {\n      default: _withCtx(() => [_hoisted_4]),\n      _: 1\n    }, 8, [\"onClick\"])])]),\n    default: _withCtx(() => [_createVNode(_component_hy_form, _mergeProps(_ctx.modalConfig, {\n      modelValue: _ctx.formData,\n      \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => _ctx.formData = $event)\n    }), null, 16, [\"modelValue\"]), _renderSlot(_ctx.$slots, \"default\")]),\n    _: 3\n  }, 8, [\"modelValue\"])]);\n}","import { defineComponent, ref, watch } from 'vue';\nimport { useStore } from 'vuex';\nimport HyForm from '@/base-ui/form';\nexport default defineComponent({\n  components: {\n    HyForm\n  },\n  props: {\n    modalConfig: {\n      type: Object,\n      required: true\n    },\n    defaultInfo: {\n      type: Object,\n      default: () => ({})\n    },\n    pageName: {\n      type: String,\n      require: true\n    },\n    otherInfo: {\n      type: Object,\n      default: () => ({})\n    }\n  },\n\n  setup(props) {\n    // dialog显示与隐藏,通过usePageModal hook设置的\n    const dialogVisible = ref(false);\n    const formData = ref({}); // 2.监听数据的改变,数据发生改变,把新输入的值赋给formData对应的字段\n\n    /* defaultInfo与table显示数据关联,table数据改变defaultInfo改变,\r\n       formData数据和form先关联,把新的defaultInfo赋值给formData是因为了做回显*/\n\n    watch(() => props.defaultInfo, newValue => {\n      for (const item of props.modalConfig.formItems) {\n        formData.value[`${item.field}`] = newValue[`${item.field}`];\n      }\n    }); // 点击确认按钮的逻辑\n    // 3.发送网络请求,根据defaultInfo是否有内容,在page-modal中,新建和编辑defaultInfo赋值不同\n    // 注意点* 赋值参数要用浅拷贝的方式,因为数据大量双向绑定,直接赋值会出问题\n\n    const store = useStore();\n\n    const handleConfirmClick = () => {\n      dialogVisible.value = false;\n\n      if (Object.keys(props.defaultInfo).length) {\n        // 编辑\n        // console.log('编辑用户')\n        store.dispatch('system/editPageDataAction', {\n          pageName: props.pageName,\n          editData: { ...formData.value,\n            ...props.otherInfo\n          },\n          id: props.defaultInfo.id\n        });\n      } else {\n        // 新建\n        // console.log('新建用户')\n        store.dispatch('system/createPageDataAction', {\n          pageName: props.pageName,\n          newData: { ...formData.value,\n            ...props.otherInfo\n          }\n        });\n      }\n    };\n\n    return {\n      dialogVisible,\n      formData,\n      handleConfirmClick\n    };\n  }\n\n});","/* unplugin-vue-components disabled */import { render } from \"./page-modal.vue?vue&type=template&id=065a9625&ts=true\"\nimport script from \"./page-modal.vue?vue&type=script&lang=ts\"\nexport * from \"./page-modal.vue?vue&type=script&lang=ts\"\n\nimport exportComponent from \"C:\\\\Users\\\\吴彦祖\\\\Desktop\\\\acc\\\\vue3-ts-cms\\\\node_modules\\\\vue-loader\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import { isFunction } from '../types'\n\nimport type { ComponentPublicInstance, Ref } from 'vue'\n\nexport type RefSetter = (\n  el: Element | ComponentPublicInstance | undefined\n) => void\n\nexport const composeRefs = (\n  ...refs: (Ref<HTMLElement | undefined> | RefSetter)[]\n) => {\n  return (el: Element | ComponentPublicInstance | null) => {\n    refs.forEach((ref) => {\n      if (isFunction(ref)) {\n        ref(el as Element | ComponentPublicInstance)\n      } else {\n        ref.value = el as HTMLElement | undefined\n      }\n    })\n  }\n}\n"],"names":["PageModal","usePageModal","newCb","editCb","pageModalRef","ref","defaultInfo","handleNewData","value","dialogVisible","handleEditData","item","dialogContentProps","buildProps","center","type","Boolean","default","closeIcon","iconPropType","customClass","String","draggable","fullscreen","showClose","title","dialogContentEmits","close","dialogInjectionKey","Symbol","t","Close","dialogRef","headerRef","bodyId","ns","style","focusTrapRef","composedDialogRef","props","useDraggable","dialogProps","appendToBody","beforeClose","definePropType","Function","destroyOnClose","closeOnClickModal","closeOnPressEscape","lockScroll","modal","openDelay","Number","closeDelay","top","modelValue","required","modalClass","width","zIndex","trapFocus","dialogEmits","open","opened","closed","UPDATE_MODEL_EVENT","isBoolean","openAutoFocus","closeAutoFocus","useDialog","targetRef","instance","getCurrentInstance","emit","nextZIndex","useZIndex","lastPosition","titleId","useId","visible","rendered","openTimer","closeTimer","namespace","useGlobalConfig","defaultNamespace","computed","style2","varPrefix","addUnit","afterEnter","afterLeave","beforeLeave","stop","useTimeoutFn","doOpen","doClose","handleClose","hide","shouldCancel","onModalClick","isClient","onOpenAutoFocus","onCloseAutoFocus","onCloseRequested","useLockscreen","watch","val","nextTick","scrollTop","transform","onMounted","slots","useDeprecated","scope","from","replacement","version","dialogContentRef","provide","overlayEvent","expose","ElDialog","withInstall","Dialog","class","_hoisted_3","_hoisted_4","render","_ctx","_cache","$props","$setup","$data","$options","_component_hy_form","_component_el_button","_component_el_dialog","$event","footer","_","onClick","handleConfirmClick","modalConfig","formData","$slots","components","HyForm","Object","pageName","require","otherInfo","setup","newValue","formItems","field","store","keys","length","dispatch","editData","id","newData","__exports__","composeRefs","refs","el","forEach","isFunction"],"sourceRoot":""}